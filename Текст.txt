Разверните проект на ангуляр 6+
Сделать страницу с формой для ввода поля и энергии, 


Робби, робот, хочет найти дорогу домой. К сожалению, его мощность довольно низкая, поэтому ему нужно найти самый короткий путь от начальной точки (точек) до целевой ячейки (T).

Когда Робби начинает, он всегда смотрит в северном направлении. Он имеет ограниченный набор команд и каждая команда стоит у него 1 единицу мощности. Команды:

Commands = {
  "TURN_RIGHT": "r", // повернуть направо на 90°
  "TURN_LEFT": "l", // повернуть налево на 90°
  "MOVE_FORWARDS": "f" // переместить одно поле вперед в текущем направлении
};

Поле, Робби движется дальше, определяется строкой, которая может иметь разные размеры, но всегда в квадрате.

Пример для поля 3x3:

field = 'S.......T';
// какие средства:
field =
  'S..' +
  '...' +
  '..T';
  
Каждая ячейка поля описывается символом:

Fields = {
  "WALKABLE": ".", // Робби может ходить по этому
  "BLOCKED": "#", // Робби не должен ходить по этому
  "START": "S", // Робби начинает здесь, он также может ходить здесь
  "TARGET": "T" // целевая ячейка, Робби должен достичь
};

Ваша задача написать функцию, которая возвращает список команд, Робби должен сделать для того, чтобы добраться до целевой ячейки и сэкономить как можно больше энергии. Если Робби не может достичь цели с оставшейся мощностью, функция должна вернуть пустой список.

Example:
getCommands('T.S.', 5); // -> ['f'], потому что он просто должен двигаться вперед
getCommands('S.......T', 10); // -> ['r', 'f', 'f', 'r', 'f', 'f']
getCommands('S.......T', 5); // -> [], потому что ему нужно как минимум 6 единиц мощности
getCommands('S#.##...T', 20); // => [], потому что цель не может быть достигнута (с произвольным количеством энергии)

дополнительное Примечание:

Существует ровно одна начальная точка (S)
Существует ровно одна целевая точка (T)
Каждый тест имеет ровно одно решение (= только один короткий список команд )
